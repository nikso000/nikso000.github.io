<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Игра про Амняма</title>
<style>
  body {
    margin: 0;
    background-color: #222;
    overflow: hidden;
    font-family: Arial, sans-serif;
  }
  #gameCanvas {
    display: block;
    margin: 0 auto;
    background-color: #111;
  }
  #score {
    color: #fff;
    text-align: center;
    font-size: 20px;
    margin-top: 10px;
  }
</style>
</head>
<body>

<canvas id="gameCanvas" width="600" height="400"></canvas>
<div id="score">Очки: 0</div>

<script>
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

let player = {
  x: 50,
  y: 200,
  width: 40,
  height: 40,
  dy: 0,
};

let obstacles = [];
let energyItems = [];
let score = 0;

let gameOver = false;

// Управление
document.addEventListener('keydown', (e) => {
  if (e.key === 'ArrowUp') {
    player.dy = -5;
  }
});
document.addEventListener('keyup', (e) => {
  if (e.key === 'ArrowUp') {
    player.dy = 0;
  }
});

// Создаем препятствия и энергию
function spawnObstacle() {
  const height = Math.random() * 100 + 20;
  obstacles.push({x:600, y: Math.random() * (400 - height), width:20, height});
}
function spawnEnergy() {
  energyItems.push({x:600, y: Math.random() * (400 -20), width:15, height:15});
}

// Основной цикл
function gameLoop() {
  if (gameOver) {
    alert('Игра окончена! Ваши очки: ' + score);
    return;
  }

  ctx.clearRect(0,0,600,400);

  // Движение игрока
  player.y += player.dy;

  // Границы экрана
  if (player.y <0) player.y=0;
  if (player.y >360) player.y=360;

  // Рисуем игрока
  ctx.fillStyle='cyan';
  ctx.fillRect(player.x, player.y, player.width, player.height);

  // Обновляем препятствия
  for (let i= obstacles.length-1; i>=0; i--) {
    obstacles[i].x -=3;

    // Проверка столкновения
    if (
      player.x < obstacles[i].x + obstacles[i].width &&
      player.x + player.width > obstacles[i].x &&
      player.y < obstacles[i].y + obstacles[i].height &&
      player.y + player.height > obstacles[i].y
    ) {
      alert('Вы столкнулись с препятствием! Игра окончена.');
      gameOver=true;
      break;
    }

    // Удаляем если вышли за границы
    if (obstacles[i].x + obstacles[i].width <0) {
      obstacles.splice(i,1);
      score++;
      document.getElementById('score').innerText='Очки: '+score;
    } else {
      ctx.fillStyle='red';
      ctx.fillRect(obstacles[i].x, obstacles[i].y, obstacles[i].width, obstacles[i].height);
    }
  }

  // Обновляем энергию
  for (let i= energyItems.length-1; i>=0; i--) {
    energyItems[i].x -=3;

    // Проверка сбора энергии
    if (
      player.x < energyItems[i].x + energyItems[i].width &&
      player.x + player.width > energyItems[i].x &&
      player.y < energyItems[i].y + energyItems[i].height &&
      player.y + player.height > energyItems[i].y
    ) {
      energyItems.splice(i,1);
      score+=2; // бонус за сбор энергии
      document.getElementById('score').innerText='Очки: '+score;
    }

    // Удаляем если вышли за границы
    if (energyItems[i] && energyItems[i].x + energyItems[i].width <0) {
      energyItems.splice(i,1);
    } else if (energyItems[i]) {
      ctx.fillStyle='yellow';
      ctx.fillRect(energyItems[i].x, energyItems[i].y, energyItems[i].width, energyItems[i].height);
    }
    
}

// Спавн препятствий и энергии с интервалом
setInterval(spawnObstacle,1500);
setInterval(spawnEnergy,3000);

// Запуск игры
setInterval(gameLoop,30);
</script>

</body>
</html>
